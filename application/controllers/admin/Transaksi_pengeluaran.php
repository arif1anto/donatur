<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Transaksi_pengeluaran extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->cek_session();
        $this->load->model('Transaksi_pengeluaran_model');
    } 

      private function cek_session()
    {
        if(!($this->session->userdata("admin_in")=="Y")){
            redirect("admin/login");
        }
    }

    /*
     * Listing of transaksi_pengeluaran
     */
    function index()
    {
        $data['transaksi_pengeluaran'] = $this->Transaksi_pengeluaran_model->get_all_transaksi_pengeluaran();

        $data['_view'] = 'transaksi_pengeluaran/index';
        $this->load->view('layouts/main',$data);
    }


    private function upload_foto()
    {
        $this->load->library('upload');
        $config = array(
            'upload_path' => "./upload/",
            'allowed_types' => "jpg|png|jpeg",
            'overwrite' => TRUE,
            );

        $this->upload->initialize($config);
        $src_file = null;
        if($this->upload->do_upload('foto')){
            $upload_data = $this->upload->data();
            $file_name = $upload_data['file_name'];
            $src_file = "upload/".$file_name;
            return $src_file;
        }
        else{
            return "ERROR|".$this->upload->display_errors();
        }
    }


    /*
     * Adding a new transaksi_pengeluaran
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('id_admin','Id Admin','integer|required');
		$this->form_validation->set_rules('besar_pengeluaran','Besar Pengeluaran','integer|required|greater_than[0]');
		$this->form_validation->set_rules('keterangan_donasi','Keterangan Donasi','max_length[50]|required');
		$this->form_validation->set_rules('bukti_transaksi','Bukti Transaksi','max_length[30]');
		
		if($this->form_validation->run())     
        {   
            $tgl = $this->input->post('tanggal_transaksi');
            $ex = explode('-', $tgl);
            $tgl = $ex[2].'/'.$ex[1].'/'.$ex[0];
            $params = array(
				'id_admin' => $this->input->post('id_admin'),
				'besar_pengeluaran' => $this->input->post('besar_pengeluaran'),
				'keterangan_donasi' => $this->input->post('keterangan_donasi'),
				//'bukti_transaksi' => $this->input->post('bukti_transaksi'),
				'tanggal_transaksi' => $tgl,
            );

            $foto = $this->upload_foto();
            $ex = explode("|", $foto);
            if($ex[0]!="ERROR"){
                $params['bukti_transaksi'] = $foto;
            }
            
            $transaksi_pengeluaran_id = $this->Transaksi_pengeluaran_model->add_transaksi_pengeluaran($params);
            redirect('admin/transaksi_pengeluaran/index');
        }
        else
        {
			$this->load->model('Admin_model');
			$data['all_admin'] = $this->Admin_model->get_all_admin();
            
            $data['_view'] = 'transaksi_pengeluaran/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a transaksi_pengeluaran
     */
    function edit($id_trans)
    {   
        // check if the transaksi_pengeluaran exists before trying to edit it
        $data['transaksi_pengeluaran'] = $this->Transaksi_pengeluaran_model->get_transaksi_pengeluaran($id_trans);
        
        if(isset($data['transaksi_pengeluaran']['id_trans']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('id_admin','Id Admin','integer|required');
			$this->form_validation->set_rules('besar_pengeluaran','Besar Pengeluaran','integer|required|greater_than[0]');
			$this->form_validation->set_rules('keterangan_donasi','Keterangan Donasi','max_length[50]|required');
			$this->form_validation->set_rules('bukti_transaksi','Bukti Transaksi','max_length[30]');
		
			if($this->form_validation->run())     
            {   
                $tgl = $this->input->post('tanggal_transaksi');
                $ex = explode('-', $tgl);
                $tgl = $ex[2].'/'.$ex[1].'/'.$ex[0];
                $params = array(
					'id_admin' => $this->input->post('id_admin'),
					'besar_pengeluaran' => $this->input->post('besar_pengeluaran'),
					'keterangan_donasi' => $this->input->post('keterangan_donasi'),
					//'bukti_transaksi' => $this->input->post('bukti_transaksi'),
					'tanggal_transaksi' => $tgl,
                );

                $foto = $this->upload_foto();
                $ex = explode("|", $foto);
                if($ex[0]!="ERROR"){
                    $params['bukti_transaksi'] = $foto;
                }

                $this->Transaksi_pengeluaran_model->update_transaksi_pengeluaran($id_trans,$params);            
                redirect('admin/transaksi_pengeluaran/index');
            }
            else
            {
				$this->load->model('Admin_model');
				$data['all_admin'] = $this->Admin_model->get_all_admin();

                $data['_view'] = 'transaksi_pengeluaran/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The transaksi_pengeluaran you are trying to edit does not exist.');
    } 

    /*
     * Deleting transaksi_pengeluaran
     */
    function remove($id_trans)
    {
        $transaksi_pengeluaran = $this->Transaksi_pengeluaran_model->get_transaksi_pengeluaran($id_trans);

        // check if the transaksi_pengeluaran exists before trying to delete it
        if(isset($transaksi_pengeluaran['id_trans']))
        {
            $this->Transaksi_pengeluaran_model->delete_transaksi_pengeluaran($id_trans);
            redirect('admin/transaksi_pengeluaran/index');
        }
        else
            show_error('The transaksi_pengeluaran you are trying to delete does not exist.');
    }
    
}
